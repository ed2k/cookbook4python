/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Floater Bridge Network.
 *
 * The Initial Developer of the Original Code is
 * Geoff Pike <pike@EECS.Berkeley.EDU>.
 * Portions created by the Initial Developer are Copyright (C) 1996-2003
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the
 * terms of either the GNU General Public License Version 2 or later
 * (the "GPL"), in which case the provisions of the GPL are applicable
 * instead of those above. If you wish to allow use of your version of
 * this file only under the terms of the GPL, and not to allow others
 * to use your version of this file under the terms of the MPL,
 * indicate your decision by deleting the provisions above and replace
 * them with the notice and other provisions required by the GPL. If
 * you do not delete the provisions above, a recipient may use your
 * version of this file under the terms of either the MPL or the GPL.
 * ***** END LICENSE BLOCK ***** */
// resultreq.TCL
//
// Requesting results is handled by this file (working with result.c)


// in ms, how often to wait between calls to calcrequests
tryset calcrequeststime 15000

// add all hands we've seen this week to the list of results we want
proc calcrequests {} {
    global weekroot

    set IMP IMP
    set MP MP
    foreach hand [seen $weekroot$IMP 1] {
	wantresult $weekroot$IMP$hand
    }
    foreach hand [seen $weekroot$MP 1] {
	wantresult $weekroot$MP$hand
    }
    dp_after $calcrequeststime calcrequests
}

gset wantedresults {}

// Add the given result to the list of results to be requested
proc wantresult {name} {
    global wantedresults

    lappend wantedresults $name
}

// ask for a result from our list of wanted results
// (this often involves skipping stuff in the list that we already have)
proc requestnextresult {} {
    global wantedresults

    while 1 {
	if {[set r [lindex 0 $wantedresults]] == ""} return
	set wantedresults [lrange 1 end $wantedresults]
	if ![dowehaveresult $r] {requestresult $r; return}
    }
}


/////////////////////////////////////////////////////////////////////////////

proc dowehaveresult {result} {
    global resultknowledge

    if {[info exists resultknowledge($result)]} \
	    if {$resultknowledge($result) == "known"} {return 1}
    return 0
}

