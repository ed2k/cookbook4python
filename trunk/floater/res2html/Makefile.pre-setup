# Generated automatically from Makefile.in by configure.
#
# This file is a Makefile for Floater.  If it has the name "Makefile.in"
# then it is a template for a Makefile;  to generate the actual Makefile,
# run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@foo@" will get replaced in the
# actual Makefile.

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own site
# are in the section that follows.  It is recommended that you modify
# Makefile.in rather than Makefile.  Then do "make Makefile".
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such as
# scripts (prefix).  The values specified here may be overridden at
# configure-time with the --exec-prefix and --prefix options to the
# "configure" script.  It is easiest if you set these to the same
# values you used in the Tk installation.  If you don't you likely
# will need to change TCL_INCLUDES, TK_INCLUDES, TCL_BIN_DIR, and
# TK_BIN_DIR, below.  You may need to change those 4 in any case.

exec_prefix =   XXXFLOATERDIRXXX
prefix =        XXXFLOATERDIRXXX

# This is a hack to help people who are confused about how to set the
# FLOATER_LIBRARY variable.  If you set that correctly it is entirely
# unnecessary.  If it causes problems, switch the comment characters
# on the two lines (so that SRC_DIR is defined to be the empty string).
SRC_DIR_DEFN = `pwd`
#SRC_DIR_DEFN =

FLOATER_LIBRARY =	$(prefix)/tclcode

# Directory in which to install the program floater and floatert:
BIN_DIR =	$(exec_prefix)/bin

# Directory in which to install the include file dp.h:
INCLUDE_DIR =	$(exec_prefix)/include

TCL_INCLUDES = -IXXXTCL80DIRXXX/generic
TK_INCLUDES = -IXXXTK80DIRXXX/generic
TCL_BIN_DIR =	XXXTCL80DIRXXX/lib
TK_BIN_DIR =	XXXTCL80DIRXXX/lib

# If necessary, the include directory for ncurses:
#CURSES_INCLUDES = 
CURSES_INCLUDES = -I/usr/sww/include/ncurses
# -I/usr/sww/lib/gcc-include

# The curses library:
#CURSES = -lcurses
CURSES = -L/usr/sww/lib/ncurses -lncurses

# Under HP/UX, reverse the comment characters on the following lines
# to enable the ANSI HP compiler.  This may generate a few warnings in
# dpnetwork.c, due to the inconsistent way the select() prototype is defined.
# HP_ANSI_FLAGS = -Aa -D_HPUX_SOURCE
HP_ANSI_FLAGS =

# Floater requires ANSI C.  You may need to modify the definition of
# CC or CFLAGS, below.  When in doubt, try gcc.

#----------------------------------------------------------------
# Most of the rest of these options you probably won't have to touch.
#----------------------------------------------------------------

# A "-I" switch that can be used when compiling to make all of the
# X11 include files accessible (the configure script will try to
# set this value, and will cause it to be an empty string if the
# include files are accessible via /usr/include).
X11_INCLUDES =   -I/usr/openwin/include

# Linker switch(es) to use to link with the X11 library archive (the
# configure script will try to set this value automatically, but you
# can override it).
X11_LIB_SWITCHES =      -lX11

# Libraries to use when linking:  must include at least Tcl-DP, Tk, Tcl,
# Xlib, and the math library (in that order).  The " -lnsl" part will be
# replaced (or has already been replaced) with relevant libraries as
# determined by the configure script.
LIBS = -ltk80 -ltcl80 $(X11_LIB_SWITCHES)  -lnsl -ldl $(CURSES) -lm -lc

# To change the compiler switches, for example to change from -O
# to -g, change the following line:
CFLAGS = -g -Wall -pipe

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands.  We also use it
# for executing config.status to remake the Makefile.
SHELL =		/bin/sh

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

AC_FLAGS =		 -DHAVE_STDLIB_H=1 -DUNIX_SOCKET=1 -DHAVE_ERRNO_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_MALLOC_H=1 
INSTALL =		/usr/sww/bin/ginstall -c
INSTALL_PROGRAM =	${INSTALL}
INSTALL_DATA =		${INSTALL} -m 644
RANLIB =		ranlib
SRC_DIR =		.

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------


PURIFY =	purify -cache-dir=XXXPURIFYCACHEXXX
QUANTIFY =	quantify -cache-dir=XXXPURIFYCACHEXXX
CPP =		/usr/lib/cpp -B
CPP_SWITCHES =
#CPP_SWITCHES =	-DDEBUG
DEPEND =	gcc -M
CC =		gcc
CC_SWITCHES =	${CFLAGS} ${CURSES_INCLUDES} -I/usr/include -I${SRC_DIR} \
${TCL_INCLUDES} ${TK_INCLUDES} -I${INCLUDE_DIR} ${AC_FLAGS} \
-DFLOATER_LIBRARY=\"${FLOATER_LIBRARY}\" -DRES2HTML \
${HP_ANSI_FLAGS} ${X11_INCLUDES} -DSRC_DIR=\"${SRC_DIR_DEFN}\"

OBJS = dpnetInit.o dpnetwork.o dpaddress.o dprpc.o

TKNX_OBJS = tkArgv.o tkCmds.o tkBind.o tkPreserve.o tkEvent.o

FLOBS = tickler.o main.o commandhash.o alloc.o floatcmd.o \
	comm.o rand.o deal.o stringlist.o br.o UI.o bits.o util.o result.o \
	score.o calendar.o help.o autohelp.o bug.o text.o res2html.o
HEADERS = alloc.h comm.h commandhash.h deal.h debug.h floatcmd.h floater.h \
	message.h rand.h stringlist.h tickler.h br.h UI.h bits.h util.h \
	result.h score.h calendar.h help.h bug.h heartsrules.h

TARFILE = floater.tar

ALL_FILES = `echo $(FLOBS) | sed 's/ tkAppInit.o//' | tr . - \
		| sed s/-o/-c/g | tr - .` $(HEADERS) \
	ref autohelp?.c \
	depend.inc depend2.inc Makefile.in \
	configure configure.in configure.info install-sh \
	README CONFUSING BUGS NEWS \
	tclcode/{*.tcl,*.TCL}

.SUFFIXES: .TCL .tcl

.TCL.tcl:
	$(CPP) $(CPP_SWITCHES) $< > $@


res2html: $(FLOBS)
	$(CC) $(CC_SWITCHES) $(FLOBS) $(LIBS) -o $@

res2htmlp: $(FLOBS)
	$(PURIFY) $(CC) $(CC_SWITCHES) $(FLOBS) $(LIBS) -o $@

res2htmlq: $(FLOBS)
	$(QUANTIFY) $(CC) $(CC_SWITCHES) $(FLOBS) $(LIBS) -o $@

autohelp.c: autohelp1.c autohelp2.c autohelp3.c ref
	-rm -f autohelp.c
	cp autohelp1.c autohelp.c
	sed 's/"/\\"/g' ref | sed 's/\(.*\)/\"\1\\n\"/g' >> autohelp.c
	cat autohelp2.c >> autohelp.c
	echo -n \" >> autohelp.c
	grep "	" ref | tr "\012" " " | tr -d "\011" >> autohelp.c
	echo -n \" >> autohelp.c
	cat autohelp3.c >> autohelp.c

install: install-binaries install-libraries

install-binaries: floater
	@for i in $(BIN_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@echo "Installing floater"
	@$(INSTALL_PROGRAM) floater $(BIN_DIR)/floater

install-libraries:
	@for i in $(prefix)/lib $(FLOATER_LIBRARY) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@cd $(SRC_DIR)/tclcode; for i in *.tcl; \
	    do \
	    echo "Installing tclcode/$$i"; \
	    $(INSTALL_DATA) $$i $(FLOATER_LIBRARY); \
	    done;
	@cd $(SRC_DIR)/library; for i in *.tcl tclIndex; \
	    do \
	    echo "Installing library/$$i"; \
	    $(INSTALL_DATA) $$i $(DP_LIBRARY); \
	    done;

Makefile: $(SRC_DIR)/Makefile.in
	$(SHELL) config.status

cr:
	@echo Putting copyright notice on files...
	@csh -c "copyright $(ALL_FILES)"

docs:
	csh -c "cp README ~ftp/pub/pike"
	rcp README homer:/var/http/pike/public_html/floater/README.txt
	rcp BUGS homer:/var/http/pike/public_html/floater/BUGS.txt
	rcp NEWS homer:/var/http/pike/public_html/floater/NEWS.txt
	rcp CONFUSING homer:/var/http/pike/public_html/floater/CONFUSING.txt

clean:
	rm -f *.a *.o core errs *~ \#* TAGS *.E a.out errors res2html res2htmlp

.c.o:
	$(CC) -c $(CC_SWITCHES) $<

depend:
	-rm -f depend.inc
	-csh -c "$(DEPEND) *.c > depend.inc"

include depend.inc
